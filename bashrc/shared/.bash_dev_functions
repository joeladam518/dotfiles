# -*- shell-script -*-
# shellcheck shell=bash
# Shared development functions

# cd into a repo based on a ".repo-aliases" file you define in your home directory
repo()
{
    local key path

    key="${1}"
    if [ -z "${key}" ]; then
        cmsg -r "Invalid alias key ''" 1>&2
        return 1
    fi

    if [ "$key" == "-l" ] || [ "$key" == "--list" ]; then
        cmsg -d "Available repos"
        __repo-helper "${HOME}/.repo-aliases" --list-keys
        return 0
    fi

    # Check if key exists
    path="$(__repo-helper "${HOME}/.repo-aliases" --key="${key}")"

    if [ -z "$path" ]; then
        cmsg -r "Invalid alias key '${key}'" 1>&2
        return 1
    fi

    cd "${path}" || return 1

    return 0
}

#
# Git functions
#

__git_delete_dead_local_branches_not_on_remote()
{
    # Attempt to delete any dead local branches
    #
    # This seemed to work on 2019-02-28 and again on 2020-09-15
    # notes: https://stackoverflow.com/questions/13064613/how-to-prune-local-tracking-branches-that-do-not-exist-on-remote-anymore
    #
    # Whats left TODO:
    # - Function fails on any repos not "fully merged". So need to list any branches that fail to be deleted.

    echo "TODO: finish this function :-)"
    return 0

    git fetch -p && git branch -r | awk '{print $1}' | grep -E -v -f /dev/fd/0 <( git branch -vv | grep origin ) | awk '{print $1}' | xargs git branch -d
    return "$?"
}
