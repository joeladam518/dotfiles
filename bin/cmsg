#!/usr/bin/env bash

## Can we use tput?
tput_found="$(command -v tput)"
tput_status="$?"

if [ -n "$tput_found" ] && [ "$tput_status" == "0" ]; then
    RESET=$(tput sgr0)
    BOLD=$(tput bold)
    RED=$(tput setaf 1)
    GREEN=$(tput setaf 2)
    BLUE=$(tput setaf 4)
    CYAN=$(tput setaf 6)
    MAGENTA=$(tput setaf 5)
    YELLOW=$(tput setaf 3)
    GRAY=$(tput setaf 245)
    WHITE=$(tput setaf 15)
else
    RESET="\e[0m"
    BOLD="\e[1m"
    RED="\e[0;31m"
    GREEN="\e[0;32m"
    BLUE="\e[0;34m"
    CYAN="\e[0;36m"
    MAGENTA="\e[0;35m"
    YELLOW="\e[0;33m"
    GRAY="\e[39m\e[2m"
    WHITE="\033[1;37m"
fi

## Functions
usage() {
    echo "Usage: $(basename "${0}") [options] [message] -- Adds color to your output."
    echo ""
    echo "Options:"
    echo "  -n  no newline"
    echo "  -d  bold the message"
    echo "  -r  color message red"
    echo "  -g  color message green"
    echo "  -b  color message blue"
    echo "  -c  color message cyan"
    echo "  -y  color message yellow"
    echo "  -m  color message magenta"
    echo "  -a  color message gray"
    echo "  -w  color message white"
}

invalid_option() {
    echo "Invalid option -- '-${1}'" 1>&2
    echo ""
    usage
    exit 1
}

## Options
CHOSEN_COLOR=""
NO_NEWLINE="0"
IS_BOLD="0"
OPTIND=1

while getopts ":hndrgbcmyaw" opt; do
    case "$opt" in
        h) usage; exit           ;; # print help
        n) NO_NEWLINE="1"        ;; # no new line
        d) IS_BOLD="1"           ;; # make it bold
        r) CHOSEN_COLOR="$RED"     ;;
        g) CHOSEN_COLOR="$GREEN"   ;;
        b) CHOSEN_COLOR="$BLUE"    ;;
        c) CHOSEN_COLOR="$CYAN"    ;;
        m) CHOSEN_COLOR="$MAGENTA" ;;
        y) CHOSEN_COLOR="$YELLOW"  ;;
        a) CHOSEN_COLOR="$GRAY"    ;;
        w) CHOSEN_COLOR="$WHITE"   ;;
        \?) invalid_option "${OPTARG}" ;;
    esac
done

shift $((OPTIND-1))

INPUT="$*"
CMD="echo -e"

# add -n flag if we want no new line
if [ "$NO_NEWLINE" == "1" ]; then
    CMD="${CMD}n"
fi

# Add color and bold
if [ -n "$CHOSEN_COLOR" ] && [ "$IS_BOLD" == "1" ]; then
    CMD="${CMD} \"${BOLD}${CHOSEN_COLOR}${INPUT}${RESET}\""
elif [ -n "$CHOSEN_COLOR" ] && [ "$IS_BOLD" == "0" ]; then
    CMD="${CMD} \"${CHOSEN_COLOR}${INPUT}${RESET}\""
elif [ -z "$CHOSEN_COLOR" ] && [ "$IS_BOLD" == "1" ]; then
    CMD="${CMD} \"${BOLD}${INPUT}${RESET}\""
else
    CMD="${CMD} \"${INPUT}\""
fi

# Finally, print the message with color!
#echo "$CMD"
eval "$CMD"
exit
