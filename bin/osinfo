#!/usr/bin/env python3
import os
import sys
from argparse import ArgumentParser, Namespace

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'python')))
from dotfiles import console, osinfo


# Functions
def more_than_one_option_chosen(script_args: Namespace) -> None:
    count = 0
    for value in script_args.__dict__.values():
        if value:
            count = count + 1
        if count > 1:
            return True

    return False


def parse_script_args():
    parser = ArgumentParser(description='Display basic info about your os')

    parser.add_argument('-c', '--codename', action='store_true', default=False,
                        help='get the codename')
    parser.add_argument('-i', '--id', action='store_true', default=False,
                        help='get the distro')
    parser.add_argument('-l', '--like', action='store_true', default=False,
                        help='get the distro that the current distro is like (for Linux)')
    parser.add_argument('-p', '--pretty', action='store_true', default=False,
                        help='get the pretty name')
    parser.add_argument('-s', '--simplified', action='store_true', default=False,
                        help='get the simplified os type (windows|mac|linux)')
    parser.add_argument('-v', '--version', action='store_true', default=False,
                        help='get the os version')

    return parser.parse_args()


if __name__ == '__main__':
    args = parse_script_args()

    if more_than_one_option_chosen(args):
        print('You\'re only allowed to choose one of the options.', file=sys.stderr)
        sys.exit(console.FAILURE)

    if args.version:
        print(osinfo.version())
    elif args.id:
        print(osinfo.id())
    elif args.like:
        print(' '.join(osinfo.id_like()))
    elif args.simplified:
        print(osinfo.ostype())
    elif args.codename:
        print(osinfo.codename())
    elif args.pretty:
        print(osinfo.pretty_name())
    else:
        print(osinfo.name())

    sys.exit(console.SUCCESS)
