#!/usr/bin/env bash

# fail fast
set -Eeuo pipefail
trap cleanup ERR

# Functions
usage() {
    cat << EOF
Usage: $(basename "${0}") [-h] [-l] {device_id}

Adjusts the settings for your logitech webcam

Arguments:
device_id       the the numeric id of the webcam

Options:
-h, --help      show this help message
-l, --list      list all webcam devices
EOF
    return 0
}

invalid_option() {
    echo "Invalid Option: ${1}" 1>&2
    exit 1
}

cleanup() {
    trap - ERR
    list_devices
    exit 1
}

is_int() {
    case "${1}" in
        ''|*[!0-9]*) return 1 ;;
        *) return 0;;
    esac
}

check_os() {
    if [ "$(osinfo -s)" != "linux" ]; then
        echo "Unsupported operating system [${UNAME}]." 1>&2
        echo "Currently this script only supports Linux distributions." 1>&2
        exit 1
    fi

    return 0
}

check_v4l_utils_is_installed() {
    if ! command -v "v4l2-ctl" >/dev/null 2>&1; then
        echo "v4l-utils is not installed." 1>&2
        exit 1
    fi

    return 0
}

check_device_number() {
    if ! is_int "${device:- ""}"; then
        echo "Error: Invalid device id" 1>&2
        exit 1
    fi

    return 0
}

list_devices() {
    check_os
    check_v4l_utils_is_installed
    echo ""
    cmsg -c "Available devices:"
    v4l2-ctl --list-devices
}

parse_arguments() {
    device="${1:-0}"

    return 0
}

parse_params() {
    while :; do
        case "${1:-""}" in
            -h | --help) usage; exit ;;
            -l | --list) list_devices; exit ;;
            -?*) invalid_option "$1" ;;
            *) break ;;
        esac
        shift
    done

    return 0
}

# Script Logic
parse_params "$@"
parse_arguments "$@"

check_os
check_v4l_utils_is_installed
check_device_number

cmsg -g "Setting webcam settings for device '/dev/video${device}'"
#-------------------------------------------------------------------------------------------------------------------
# settings
v4l2-ctl -d "${device}" --set-ctrl brightness=135
v4l2-ctl -d "${device}" --set-ctrl contrast=128
v4l2-ctl -d "${device}" --set-ctrl saturation=128
v4l2-ctl -d "${device}" --set-ctrl white_balance_temperature_auto=1
#v4l2-ctl -d "${device}" --set-ctrl white_balance_temperature=3800
v4l2-ctl -d "${device}" --set-ctrl gain=0
v4l2-ctl -d "${device}" --set-ctrl power_line_frequency=1
v4l2-ctl -d "${device}" --set-ctrl sharpness=128
v4l2-ctl -d "${device}" --set-ctrl backlight_compensation=0
v4l2-ctl -d "${device}" --set-ctrl exposure_auto=3
#v4l2-ctl -d "${device}" --set-ctrl exposure_absolute=250
v4l2-ctl -d "${device}" --set-ctrl exposure_auto_priority=0

# focus controls
#v4l2-ctl -d "${device}" --set-ctrl focus_auto=1
#v4l2-ctl -d "${device}" --set-ctrl pan_absolute=10000
#v4l2-ctl -d "${device}" --set-ctrl tilt_absolute=10000
#v4l2-ctl -d "${device}" --set-ctrl focus_absolute=20

# zoom?
#v4l2-ctl -d "${device}" --set-ctrl zoom_absolute=175
#-------------------------------------------------------------------------------------------------------------------
cmsg -g "Done!"
