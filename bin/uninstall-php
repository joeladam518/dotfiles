#!/usr/bin/env python3
import os
import sys
import re
from argparse import ArgumentParser
from subprocess import CalledProcessError
from typing import Optional

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'python')))
from dotfiles import arr, console, osinfo, run


# Functions
def get_installed_php_packages(version: Optional[str] = None) -> list:
    """Get the currently installed php packages"""
    cmd = r"dpkg -l | grep -E '^[a-zA-Z]*\s*php%s' | sed 's/^[a-zA-Z]*\s*//' | sed 's/\s\{3,\}.*$//' | tr '\n' ' '"
    packages = run.command(cmd % (version or '*'), capture_output=True)
    packages = packages.strip().split(' ')
    return list(filter(lambda package: bool(package), packages))


def get_uninstallable_versions() -> tuple:
    uninstallable_versions = list(
        map(lambda package: re.search(r'php(\d\.\d)?.*', package).group(1), get_installed_php_packages())
    )
    return arr.unique(tuple(filter(lambda package: bool(package), uninstallable_versions)))


def parse_script_args():
    parser = ArgumentParser(description='Uninstall PHP')

    parser.add_argument('-v', '--version', type=str, action='store', default=None,
                        help='php version to install')

    return parser.parse_args()


if __name__ == '__main__':
    if osinfo.id() not in ['debian', 'raspbian', 'ubuntu']:
        print('Your operating system is not supported', file=sys.stderr)
        sys.exit(console.FAILURE)

    try:
        args = parse_script_args()
        uninstallable_versions = get_uninstallable_versions()

        if not uninstallable_versions:
            print()
            print(f"No php packages found")
            print()
            sys.exit(console.SUCCESS)

        if not args.version or args.version not in uninstallable_versions:
            args.version = console.choice(
                "Which version would you like to uninstall?",
                uninstallable_versions,
                default=0
            )
            if not args.version:
                print('Invalid php version', file=sys.stderr)
                sys.exit(console.FAILURE)

        packages = get_installed_php_packages(args.version)

        if len(packages) == 0:
            print()
            print(f"No packages found for php{args.version}")
            print()
            sys.exit(console.SUCCESS)

        print()
        print('Packages to be uninstalled:')
        print(*packages, sep='\n')

        print()
        if console.confirm('Proceed?'):
            run.command('apt purge -y', *packages, root=True)
            run.command('apt autoremove -y', root=True)
        else:
            print("Exiting...")

        print()
        sys.exit(console.SUCCESS)
    except KeyboardInterrupt:
        print()
        sys.exit(console.CTRL_C)
